name: Cypress Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  api-tests:
    name: 🔌 API Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: 📦 Instalar dependências
        run: npm ci
      
      - name: ▶️ Rodar testes de API
        run: npx cypress run --spec "cypress/e2e/api/**/*.cy.{js,ts}"
      
      - name: 📄 Publicar artefatos dos testes de API
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-api-artifacts
          path: |
            cypress/screenshots
            cypress/videos
          retention-days: 30

  e2e-tests:
    name: 🧪 E2E Tests (Cucumber)
    runs-on: ubuntu-latest
    needs: api-tests
    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: 📦 Instalar dependências
        run: npm ci

      - name: 🛠️ Instalar dependências do sistema
        run: sudo apt-get update && sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      
      - name: ✅ Verificar instalação do Cypress
        run: npx cypress verify
      
      - name: ▶️ Rodar testes E2E (Cucumber .feature)
        # Use xvfb-run to avoid display issues in headless CI environments and
        # run only feature files under cypress/e2e for clarity.
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" npx cypress run --spec "cypress/e2e/**/*.feature"
      
      - name: 🧩 Criar pasta de evidências
        if: always()
        run: mkdir -p cypress/screenshots
      
      - name: 📄 Publicar artefatos dos testes E2E
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-e2e-artifacts
          path: |
            cypress/screenshots
            cypress/videos
          retention-days: 30
      
      - name: 🧱 Gerar Allure Report (resiliente)
        if: always()
        run: |
          if [ -d allure-results ] && [ "$(ls -A allure-results)" ]; then
            npx allure generate allure-results --clean -o allure-report
          else
            echo "No allure-results found; creating placeholder report so subsequent steps won't fail."
            mkdir -p allure-report
            cat > allure-report/index.html <<'HTML'
            <!doctype html>
            <html>
              <head><meta charset="utf-8"><title>No Allure Results</title></head>
              <body><h1>No Allure Results</h1><p>There were no allure-results produced in this run.</p></body>
            </html>
            HTML
          fi
      
      - name: 📦 Compactar relatório Allure
        if: always()
        run: |
          if [ -d "allure-report" ]; then
            zip -r allure-report.zip allure-report
          else
            echo "No allure-report directory to zip; creating empty zip placeholder."
            mkdir -p tmp-empty-report && zip -r allure-report.zip tmp-empty-report && rm -rf tmp-empty-report
          fi
      
      - name: 📤 Upload do Allure Report ZIP
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-zip
          path: allure-report.zip
          retention-days: 30
      
      - name: 🌐 Publicar Allure Report no GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          force_orphan: true
      
      - name: 📢 Mostrar URL do Report
        if: always()
        run: |
          owner="${{ github.repository_owner }}"
          repo="${{ github.event.repository.name }}"
          echo "✅ Allure Report publicado!"
          echo "🔗 Acesse em: https://${owner}.github.io/${repo}/"
